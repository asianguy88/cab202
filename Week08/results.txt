~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~ Playing with bits and bytes ~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

..... |PROBLEM 1| .............................................................
'answer_1()' receives a bit number. Return a byte with the corresponding bit
set, and all other bits cleared.
Testing...
Expected return:	0x08		Actual return:	0x08		PASSED!
...............................................................................


..... |PROBLEM 2| .............................................................
'answer_2()' receives a bit number. Return a byte with the corresponding bit
cleared, and all other bits set.
Testing...
Expected return:	0xFD		Actual return:	0xFD		PASSED!
...............................................................................


..... |PROBLEM 3| .............................................................
'answer_3()' receives a byte and bit number. Return the same byte with the
corresponding bit set, and all other bits unchanged.
Testing...
Expected return:	0x33		Actual return:	0x33		PASSED!
...............................................................................


..... |PROBLEM 4| .............................................................
'answer_4()' receives a byte and bit number. Return the same byte with the
corresponding bit cleared, and all other bits unchanged.
Testing...
Expected return:	0xDC		Actual return:	0xDC		PASSED!
...............................................................................


..... |PROBLEM 5| .............................................................
'answer_5()' receives a byte. Return the byte with all 8 bits toggled.
Testing...
Expected return:	0x43		Actual return:	0x43		PASSED!
...............................................................................


..... |PROBLEM 6| .............................................................
'answer_6()' receives a byte and bit number. Return the same byte with the
corresponding bit toggled, and all other bits unchanged.
Testing...
Expected return:	0x58		Actual return:	0x58		PASSED!
...............................................................................


..... |PROBLEM 7| .............................................................
'answer_7()' receives a byte and bit number. Return the value (set or unset)
of the corresponding bit.
Testing...
Expected return:	1			Actual return:	1			PASSED!
...............................................................................


..... |PROBLEM 8| .............................................................
'answer_8()' receives a byte and two bit numbers. Set the bit corresponding
to the first bit number, toggle every bit in the byte, then return the value of
the bit corresponding to the second bit number.
Testing...
Expected return:	0			Actual return:	0			PASSED!
...............................................................................


..... |PROBLEM 9| .............................................................
'answer_9()' receives a bit number. Return a byte with every bit up to
and including that bit number set, with all other bits cleared.
Testing...
Expected return:	0x0F		Actual return:	0x0F		PASSED!
...............................................................................


..... |PROBLEM 10| ............................................................
'answer_10()' receives a pointer to a byte. Return the data in the two most
significant bits of that byte.
Testing...
Expected return:	0x02		Actual return:	0x02		PASSED!
...............................................................................


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~ Your total score for the problems was: 10 / 10 ~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~ Well done. You've mastered playing with bits and bytes! ~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
